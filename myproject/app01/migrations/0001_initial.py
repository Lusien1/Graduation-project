# Generated by Django 5.0.3 on 2024-03-20 07:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UsAccidentsMarch23',
            fields=[
                ('id', models.TextField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('severity', models.IntegerField(blank=True, db_column='Severity', null=True)),
                ('start_time', models.TextField(blank=True, db_column='Start_Time', null=True)),
                ('end_time', models.TextField(blank=True, db_column='End_Time', null=True)),
                ('start_lat', models.FloatField(blank=True, db_column='Start_Lat', null=True)),
                ('start_lng', models.FloatField(blank=True, db_column='Start_Lng', null=True)),
                ('end_lat', models.TextField(blank=True, db_column='End_Lat', null=True)),
                ('end_lng', models.TextField(blank=True, db_column='End_Lng', null=True)),
                ('distance_mi_field', models.FloatField(blank=True, db_column='Distance(mi)', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('street', models.TextField(blank=True, db_column='Street', null=True)),
                ('city', models.TextField(blank=True, db_column='City', null=True)),
                ('county', models.TextField(blank=True, db_column='County', null=True)),
                ('state', models.TextField(blank=True, db_column='State', null=True)),
                ('zipcode', models.TextField(blank=True, db_column='Zipcode', null=True)),
                ('country', models.TextField(blank=True, db_column='Country', null=True)),
                ('timezone', models.TextField(blank=True, db_column='Timezone', null=True)),
                ('airport_code', models.TextField(blank=True, db_column='Airport_Code', null=True)),
                ('weather_timestamp', models.TextField(blank=True, db_column='Weather_Timestamp', null=True)),
                ('temperature_f_field', models.TextField(blank=True, db_column='Temperature(F)', null=True)),
                ('wind_chill_f_field', models.TextField(blank=True, db_column='Wind_Chill(F)', null=True)),
                ('humidity_field', models.TextField(blank=True, db_column='Humidity(%)', null=True)),
                ('pressure_in_field', models.TextField(blank=True, db_column='Pressure(in)', null=True)),
                ('visibility_mi_field', models.TextField(blank=True, db_column='Visibility(mi)', null=True)),
                ('wind_direction', models.TextField(blank=True, db_column='Wind_Direction', null=True)),
                ('wind_speed_mph_field', models.TextField(blank=True, db_column='Wind_Speed(mph)', null=True)),
                ('precipitation_in_field', models.TextField(blank=True, db_column='Precipitation(in)', null=True)),
                ('weather_condition', models.TextField(blank=True, db_column='Weather_Condition', null=True)),
                ('amenity', models.TextField(blank=True, db_column='Amenity', null=True)),
                ('bump', models.TextField(blank=True, db_column='Bump', null=True)),
                ('crossing', models.TextField(blank=True, db_column='Crossing', null=True)),
                ('give_way', models.TextField(blank=True, db_column='Give_Way', null=True)),
                ('junction', models.TextField(blank=True, db_column='Junction', null=True)),
                ('no_exit', models.TextField(blank=True, db_column='No_Exit', null=True)),
                ('railway', models.TextField(blank=True, db_column='Railway', null=True)),
                ('roundabout', models.TextField(blank=True, db_column='Roundabout', null=True)),
                ('station', models.TextField(blank=True, db_column='Station', null=True)),
                ('stop', models.TextField(blank=True, db_column='Stop', null=True)),
                ('traffic_calming', models.TextField(blank=True, db_column='Traffic_Calming', null=True)),
                ('traffic_signal', models.TextField(blank=True, db_column='Traffic_Signal', null=True)),
                ('turning_loop', models.TextField(blank=True, db_column='Turning_Loop', null=True)),
                ('sunrise_sunset', models.TextField(blank=True, db_column='Sunrise_Sunset', null=True)),
                ('civil_twilight', models.TextField(blank=True, db_column='Civil_Twilight', null=True)),
                ('nautical_twilight', models.TextField(blank=True, db_column='Nautical_Twilight', null=True)),
                ('astronomical_twilight', models.TextField(blank=True, db_column='Astronomical_Twilight', null=True)),
            ],
            options={
                'db_table': 'us_accidents_march23',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsAccidentsTable',
            fields=[
                ('id', models.TextField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('severity', models.IntegerField(blank=True, db_column='Severity', null=True)),
                ('start_time', models.TextField(blank=True, db_column='Start_Time', null=True)),
                ('end_time', models.TextField(blank=True, db_column='End_Time', null=True)),
                ('start_lat', models.FloatField(blank=True, db_column='Start_Lat', null=True)),
                ('start_lng', models.FloatField(blank=True, db_column='Start_Lng', null=True)),
                ('end_lat', models.TextField(blank=True, db_column='End_Lat', null=True)),
                ('end_lng', models.TextField(blank=True, db_column='End_Lng', null=True)),
                ('distance_mi_field', models.FloatField(blank=True, db_column='Distance(mi)', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('street', models.TextField(blank=True, db_column='Street', null=True)),
                ('city', models.TextField(blank=True, db_column='City', null=True)),
                ('county', models.TextField(blank=True, db_column='County', null=True)),
                ('state', models.TextField(blank=True, db_column='State', null=True)),
                ('zipcode', models.TextField(blank=True, db_column='Zipcode', null=True)),
                ('country', models.TextField(blank=True, db_column='Country', null=True)),
                ('timezone', models.TextField(blank=True, db_column='Timezone', null=True)),
                ('airport_code', models.TextField(blank=True, db_column='Airport_Code', null=True)),
                ('weather_timestamp', models.TextField(blank=True, db_column='Weather_Timestamp', null=True)),
                ('temperature_f_field', models.FloatField(blank=True, db_column='Temperature(F)', null=True)),
                ('wind_chill_f_field', models.TextField(blank=True, db_column='Wind_Chill(F)', null=True)),
                ('humidity_field', models.FloatField(blank=True, db_column='Humidity(%)', null=True)),
                ('pressure_in_field', models.FloatField(blank=True, db_column='Pressure(in)', null=True)),
                ('visibility_mi_field', models.FloatField(blank=True, db_column='Visibility(mi)', null=True)),
                ('wind_direction', models.TextField(blank=True, db_column='Wind_Direction', null=True)),
                ('wind_speed_mph_field', models.TextField(blank=True, db_column='Wind_Speed(mph)', null=True)),
                ('precipitation_in_field', models.TextField(blank=True, db_column='Precipitation(in)', null=True)),
                ('weather_condition', models.TextField(blank=True, db_column='Weather_Condition', null=True)),
                ('amenity', models.TextField(blank=True, db_column='Amenity', null=True)),
                ('bump', models.TextField(blank=True, db_column='Bump', null=True)),
                ('crossing', models.TextField(blank=True, db_column='Crossing', null=True)),
                ('give_way', models.TextField(blank=True, db_column='Give_Way', null=True)),
                ('junction', models.TextField(blank=True, db_column='Junction', null=True)),
                ('no_exit', models.TextField(blank=True, db_column='No_Exit', null=True)),
                ('railway', models.TextField(blank=True, db_column='Railway', null=True)),
                ('roundabout', models.TextField(blank=True, db_column='Roundabout', null=True)),
                ('station', models.TextField(blank=True, db_column='Station', null=True)),
                ('stop', models.TextField(blank=True, db_column='Stop', null=True)),
                ('traffic_calming', models.TextField(blank=True, db_column='Traffic_Calming', null=True)),
                ('traffic_signal', models.TextField(blank=True, db_column='Traffic_Signal', null=True)),
                ('turning_loop', models.TextField(blank=True, db_column='Turning_Loop', null=True)),
                ('sunrise_sunset', models.TextField(blank=True, db_column='Sunrise_Sunset', null=True)),
                ('civil_twilight', models.TextField(blank=True, db_column='Civil_Twilight', null=True)),
                ('nautical_twilight', models.TextField(blank=True, db_column='Nautical_Twilight', null=True)),
                ('astronomical_twilight', models.TextField(blank=True, db_column='Astronomical_Twilight', null=True)),
            ],
            options={
                'db_table': 'us_accidents_table',
                'managed': False,
            },
        ),
    ]
